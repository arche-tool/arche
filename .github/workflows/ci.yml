name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:

jobs:
  test:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        stack: ["latest"]
        ghc: ["8.6.5"]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - uses: actions/setup-haskell@v1.1
      name: Setup Haskell Stack
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}
        enable-stack: true

    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: '12'

    - name: Install elm-app
      run: npm install create-elm-app -g
        
    - uses: actions/cache@v1
      name: Cache ~/.npm
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - uses: actions/cache@v1
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: stack-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('stack.yaml.lock') }}
        restore-keys: |
          stack-${{ runner.os }}-${{ matrix.ghc }}-

    - name: Build
      run: |
        make build

    - name: Test
      run: |
        make run-test

    - name: Build cli tool
      run: |
        make arche-cli

    - name: Build server
      run: |
        make arche-server

    - name: Build frontend
      run: |
        make build-frontend

    - name: Deploy application container
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
      run: | 
        make deploy-server